[0.000000] (-) TimerEvent: {}
[0.000928] (-) JobUnselected: {'identifier': 'a_star_algorithm_pkg'}
[0.001084] (-) JobUnselected: {'identifier': 'genetic_algorithm_pkg'}
[0.001167] (-) JobUnselected: {'identifier': 'grid_algorithm_pkg'}
[0.001184] (-) JobUnselected: {'identifier': 'pso_planner_pkg'}
[0.001208] (hybrid_a_star_algorithm_pkg) JobQueued: {'identifier': 'hybrid_a_star_algorithm_pkg', 'dependencies': OrderedDict()}
[0.001230] (hybrid_a_star_algorithm_pkg) JobStarted: {'identifier': 'hybrid_a_star_algorithm_pkg'}
[0.009992] (hybrid_a_star_algorithm_pkg) JobProgress: {'identifier': 'hybrid_a_star_algorithm_pkg', 'progress': 'cmake'}
[0.010831] (hybrid_a_star_algorithm_pkg) JobProgress: {'identifier': 'hybrid_a_star_algorithm_pkg', 'progress': 'build'}
[0.011719] (hybrid_a_star_algorithm_pkg) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/neubility/path_planning_ws/path_planning/src/build/hybrid_a_star_algorithm_pkg', '--', '-j16', '-l16'], 'cwd': '/home/neubility/path_planning_ws/path_planning/src/build/hybrid_a_star_algorithm_pkg', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'neubility'), ('LC_TIME', 'ko_KR.UTF-8'), ('TEXTDOMAIN', 'im-config'), ('XDG_SEAT', 'seat0'), ('SSH_AGENT_PID', '1317'), ('XDG_SESSION_TYPE', 'x11'), ('LD_LIBRARY_PATH', '/home/neubility/Qt5.14.2/Tools/QtCreator/lib:/usr/local/cuda-11.4/lib64:/usr/lib/x86_64-linux-gnu/gazebo-9/plugins:/opt/ros/eloquent/opt/yaml_cpp_vendor/lib:/opt/ros/eloquent/opt/rviz_ogre_vendor/lib:/opt/ros/eloquent/lib/x86_64-linux-gnu:/opt/ros/eloquent/lib'), ('SHLVL', '1'), ('QT4_IM_MODULE', 'xim'), ('HOME', '/home/neubility'), ('OLDPWD', '/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/etc/xdg/autostart/org.gnome.SettingsDaemon.MediaKeys.desktop'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('ROS_PYTHON_VERSION', '3'), ('LC_MONETARY', 'ko_KR.UTF-8'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '1568'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator20x1a6021154d881c'), ('IM_CONFIG_PHASE', '2'), ('ROS_DISTRO', 'eloquent'), ('LOGNAME', 'neubility'), ('GTK_IM_MODULE', 'ibus'), ('DESKTOP_AUTOSTART_ID', '10d928c8cb783c78ea164079119029232000000012400007'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('USERNAME', 'neubility'), ('XDG_SESSION_ID', '1'), ('TERM', 'xterm-256color'), ('ROS_LOCALHOST_ONLY', '0'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('WINDOWPATH', '1'), ('PATH', '/home/neubility/Qt5.14.2/Tools/QtCreator/bin:/usr/local/cuda-11.4/bin:/opt/ros/eloquent/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/neubility:@/tmp/.ICE-unix/1240,unix/neubility:/tmp/.ICE-unix/1240'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'ko_KR.UTF-8'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'ko_KR.UTF-8'), ('RMW_IMPLEMENTATION', 'rmw_cyclonedds_cpp'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XMODIFIERS', '@im=ibus'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('AMENT_PREFIX_PATH', '/opt/ros/eloquent'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('ROS_DOMAIN_ID', '212'), ('TERMINATOR_UUID', 'urn:uuid:744be55c-66f3-475d-8f34-706d4635049f'), ('LC_NAME', 'ko_KR.UTF-8'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'ko_KR.UTF-8'), ('TEXTDOMAINDIR', '/usr/share/locale/'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'ko_KR.UTF-8'), ('XDG_VTNR', '1'), ('QT_IM_MODULE', 'ibus'), ('LC_ALL', 'en_US.UTF-8'), ('PWD', '/home/neubility/path_planning_ws/path_planning/src/build/hybrid_a_star_algorithm_pkg'), ('CLUTTER_IM_MODULE', 'xim'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('LC_NUMERIC', 'ko_KR.UTF-8'), ('PYTHONPATH', '/opt/ros/eloquent/lib/python3.6/site-packages'), ('LC_PAPER', 'ko_KR.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '5202'), ('CMAKE_PREFIX_PATH', '/opt/ros/eloquent')]), 'shell': False}
[0.052435] (hybrid_a_star_algorithm_pkg) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target hybrid_a_star_algorithm_pkg\x1b[0m\n'}
[0.061577] (hybrid_a_star_algorithm_pkg) StdoutLine: {'line': b'[ 33%] \x1b[32mBuilding CXX object CMakeFiles/hybrid_a_star_algorithm_pkg.dir/src/main.cpp.o\x1b[0m\n'}
[0.098449] (-) TimerEvent: {}
[0.198769] (-) TimerEvent: {}
[0.299071] (-) TimerEvent: {}
[0.399301] (-) TimerEvent: {}
[0.499619] (-) TimerEvent: {}
[0.600015] (-) TimerEvent: {}
[0.697398] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:12:0\x1b[m\x1b[K:\n'}
[0.697896] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:76:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[0.697997] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;31m\x1b[KEigen\x1b[m\x1b[K::VectorXd WPs_coeff;\n'}
[0.698058] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.698112] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:155:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[0.698169] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     bool Run(\x1b[01;31m\x1b[KEigen\x1b[m\x1b[K::VectorXd coeffs_, std::vector<std::pair<double, double>> obstacles_)\n'}
[0.698223] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'              \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.698274] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:155:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K...\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[Kcoeffs_\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.698341] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     bool Run(Eigen::VectorXd \x1b[01;31m\x1b[Kcoeffs_\x1b[m\x1b[K, std::vector<std::pair<double, double>> obstacles_)\n'}
[0.698390] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                              \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[0.698439] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:369:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[0.698491] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     std::vector<Node> UpdateNode(Node *stand_node, \x1b[01;31m\x1b[KEigen\x1b[m\x1b[K::VectorXd &coeffs_, std::vector<std::pair<double, double>> &obstacles_)\n'}
[0.698541] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                                    \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.698589] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:369:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K...\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[K&\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[0.698691] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     std::vector<Node> UpdateNode(Node *stand_node, Eigen::VectorXd \x1b[01;31m\x1b[K&\x1b[m\x1b[Kcoeffs_, std::vector<std::pair<double, double>> &obstacles_)\n'}
[0.698767] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[0.699220] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:590:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[0.699323] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;31m\x1b[KEigen\x1b[m\x1b[K::VectorXd PolyFit(Eigen::VectorXd xvals, Eigen::VectorXd yvals, int order)\n'}
[0.699386] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.699440] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:607:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[0.699495] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     double GetPotentialCost(\x1b[01;31m\x1b[KEigen\x1b[m\x1b[K::VectorXd coeffs_, double x_, double y_)\n'}
[0.699546] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                             \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.699595] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:607:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K...\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[Kcoeffs_\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.699651] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     double GetPotentialCost(Eigen::VectorXd \x1b[01;31m\x1b[Kcoeffs_\x1b[m\x1b[K, double x_, double y_)\n'}
[0.699700] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[0.699750] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:708:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[0.699808] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     double PolyEval(\x1b[01;31m\x1b[KEigen\x1b[m\x1b[K::VectorXd coeffs, double x)\n'}
[0.699863] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.699914] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:708:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K...\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[Kcoeffs\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.699966] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     double PolyEval(Eigen::VectorXd \x1b[01;31m\x1b[Kcoeffs\x1b[m\x1b[K, double x)\n'}
[0.700012] (-) TimerEvent: {}
[0.700101] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[0.700246] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KHybridAstar::HybridAstar(double, double, double, double)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.700572] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:87:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KHybridAstar::threshold_distance_for_stop\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K-Wreorder\x1b[m\x1b[K]\n'}
[0.700682] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     double \x1b[01;35m\x1b[Kthreshold_distance_for_stop\x1b[m\x1b[K;\n'}
[0.700744] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.700802] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:86:9:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kint HybridAstar::init_pos_index\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wreorder\x1b[m\x1b[K]\n'}
[0.700861] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     int \x1b[01;35m\x1b[Kinit_pos_index\x1b[m\x1b[K;\n'}
[0.700914] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'         \x1b[01;35m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.700967] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:105:5:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K-Wreorder\x1b[m\x1b[K]\n'}
[0.701022] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;35m\x1b[KHybridAstar\x1b[m\x1b[K(double init_x_, double init_y_, double target_x_, double target_y_)\n'}
[0.701073] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;35m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.701121] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:86:9:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KHybridAstar::init_pos_index\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K-Wreorder\x1b[m\x1b[K]\n'}
[0.701173] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     int \x1b[01;35m\x1b[Kinit_pos_index\x1b[m\x1b[K;\n'}
[0.701220] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'         \x1b[01;35m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.701269] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:73:9:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kint HybridAstar::oc_size_row\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wreorder\x1b[m\x1b[K]\n'}
[0.701323] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     int \x1b[01;35m\x1b[Koc_size_row\x1b[m\x1b[K;\n'}
[0.701370] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'         \x1b[01;35m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.701671] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:105:5:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K-Wreorder\x1b[m\x1b[K]\n'}
[0.701768] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;35m\x1b[KHybridAstar\x1b[m\x1b[K(double init_x_, double init_y_, double target_x_, double target_y_)\n'}
[0.701829] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;35m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.701883] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:89:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KHybridAstar::length_arc\x1b[m\x1b[K\xe2\x80\x99 will be initialized after [\x1b[01;35m\x1b[K-Wreorder\x1b[m\x1b[K]\n'}
[0.701939] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     double \x1b[01;35m\x1b[Klength_arc\x1b[m\x1b[K;\n'}
[0.701990] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'            \x1b[01;35m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[0.702039] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:77:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kdouble HybridAstar::init_offset_x\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wreorder\x1b[m\x1b[K]\n'}
[0.702097] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     double \x1b[01;35m\x1b[Kinit_offset_x\x1b[m\x1b[K;\n'}
[0.702145] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'            \x1b[01;35m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.702193] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:105:5:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K  when initialized here [\x1b[01;35m\x1b[K-Wreorder\x1b[m\x1b[K]\n'}
[0.702241] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;35m\x1b[KHybridAstar\x1b[m\x1b[K(double init_x_, double init_y_, double target_x_, double target_y_)\n'}
[0.702289] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;35m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.702338] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool HybridAstar::Run(int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.702397] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:162:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison between signed and unsigned integer expressions [\x1b[01;35m\x1b[K-Wsign-compare\x1b[m\x1b[K]\n'}
[0.702447] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'         for (int i = 0; \x1b[01;35m\x1b[Ki < this->node.size()\x1b[m\x1b[K; i++)\n'}
[0.702496] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                         \x1b[01;35m\x1b[K~~^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.702543] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:167:26:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ksuggest parentheses around comparison in operand of \xe2\x80\x98\x1b[01m\x1b[K|\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wparentheses\x1b[m\x1b[K]\n'}
[0.702597] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'             if (\x1b[01;35m\x1b[Koc_y_tmp < 0\x1b[m\x1b[K | oc_x_tmp < 0)\n'}
[0.702649] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                 \x1b[01;35m\x1b[K~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[0.702698] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:239:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcoeffs_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.702752] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b' ctor<struct Node> updated_node_tmp = UpdateNode(&this->node[cur_i], \x1b[01;31m\x1b[Kcoeffs_\x1b[m\x1b[K, obstacles_); // Set New Node\n'}
[0.702805] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                                                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[0.703023] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:239:93:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kobstacles_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.703201] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b' ct Node> updated_node_tmp = UpdateNode(&this->node[cur_i], coeffs_, \x1b[01;31m\x1b[Kobstacles_\x1b[m\x1b[K); // Set New Node\n'}
[0.703265] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                                                     \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[0.705386] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:239:93:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternative: \xe2\x80\x98\x1b[01m\x1b[Kobstack\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.705568] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b' ct Node> updated_node_tmp = UpdateNode(&this->node[cur_i], coeffs_, \x1b[01;36m\x1b[Kobstacles_\x1b[m\x1b[K); // Set New Node\n'}
[0.705634] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                                                     \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[0.705691] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                                                                             \x1b[32m\x1b[Kobstack\x1b[m\x1b[K\n'}
[0.706591] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:155:21:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[KVectorXd\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[0.706794] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     bool Run(Eigen::\x1b[01;35m\x1b[KVectorXd\x1b[m\x1b[K coeffs_, std::vector<std::pair<double, double>> obstacles_)\n'}
[0.706968] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                     \x1b[01;35m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[0.707296] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<Node> HybridAstar::UpdateNode(Node*, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.707525] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:450:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison between signed and unsigned integer expressions [\x1b[01;35m\x1b[K-Wsign-compare\x1b[m\x1b[K]\n'}
[0.707760] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'         for (int i = 0; \x1b[01;35m\x1b[Ki < radius.size()\x1b[m\x1b[K; i++)\n'}
[0.707821] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                         \x1b[01;35m\x1b[K~~^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.707868] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:474:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused variable \xe2\x80\x98\x1b[01m\x1b[Kangle_deg\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-variable\x1b[m\x1b[K]\n'}
[0.707915] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                 double \x1b[01;35m\x1b[Kangle_deg\x1b[m\x1b[K = std::acos(cos_theta) * 180. / M_PI; // \xec\x96\x98\xeb\x8a\x94 \xec\x95\x88\xec\x94\x80. cos_theta\xea\xb0\x80 1.00001 \xed\x98\xb9\xec\x9d\x80 -1.00001 \xea\xb0\x92\xec\x9d\xb4 \xeb\x82\x98\xec\x98\xa4\xeb\xa9\xb4 std::acos\xea\xb0\x80 nan\xec\x9c\xbc\xeb\xa1\x9c \xeb\xb0\x9c\xec\x82\xb0\xed\x95\x98\xeb\x8a\x94 \xea\xb0\x92\xec\x9d\x84 \xeb\xa6\xac\xed\x84\xb4\xed\x95\xa8.\n'}
[0.707966] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                        \x1b[01;35m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[0.708012] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:490:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison between signed and unsigned integer expressions [\x1b[01;35m\x1b[K-Wsign-compare\x1b[m\x1b[K]\n'}
[0.708058] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'         for (int i = 0; \x1b[01;35m\x1b[Ki < updated_node_list_tmp.size()\x1b[m\x1b[K; i++)\n'}
[0.708102] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                         \x1b[01;35m\x1b[K~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.708143] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:499:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[0.708184] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'             \x1b[01;31m\x1b[KEigen\x1b[m\x1b[K::VectorXd coeffs_tmp = coeffs_;\n'}
[0.708223] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'             \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.708262] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:502:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcoeffs_tmp\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.708302] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'             U_att = GetPotentialCost(\x1b[01;31m\x1b[Kcoeffs_tmp\x1b[m\x1b[K, ego_x_tmp, ego_y_tmp);\n'}
[0.708341] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                      \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[0.709613] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:502:38:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternative: \xe2\x80\x98\x1b[01m\x1b[Kconfstr\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.709781] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'             U_att = GetPotentialCost(\x1b[01;36m\x1b[Kcoeffs_tmp\x1b[m\x1b[K, ego_x_tmp, ego_y_tmp);\n'}
[0.709856] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                      \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[0.709913] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                      \x1b[32m\x1b[Kconfstr\x1b[m\x1b[K\n'}
[0.709968] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:505:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kobstacles_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.710022] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'             for (int i = 0; i < \x1b[01;31m\x1b[Kobstacles_\x1b[m\x1b[K.size(); i++)\n'}
[0.710073] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                 \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[0.712078] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:505:33:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternative: \xe2\x80\x98\x1b[01m\x1b[Kobstack\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.712441] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'             for (int i = 0; i < \x1b[01;36m\x1b[Kobstacles_\x1b[m\x1b[K.size(); i++)\n'}
[0.712721] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                 \x1b[01;36m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[0.712780] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                 \x1b[32m\x1b[Kobstack\x1b[m\x1b[K\n'}
[0.712829] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:429:16:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused variable \xe2\x80\x98\x1b[01m\x1b[Kcost_g_offset\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-variable\x1b[m\x1b[K]\n'}
[0.712878] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'         double \x1b[01;35m\x1b[Kcost_g_offset\x1b[m\x1b[K = 100; //0.35; // Origin : 100.0\n'}
[0.712953] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                \x1b[01;35m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.713134] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:369:59:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[KVectorXd\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[0.713276] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     std::vector<Node> UpdateNode(Node *stand_node, Eigen::\x1b[01;35m\x1b[KVectorXd\x1b[m\x1b[K &coeffs_, std::vector<std::pair<double, double>> &obstacles_)\n'}
[0.713329] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                                           \x1b[01;35m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[0.713377] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kdouble HybridAstar::GetPotentialCost(int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.713422] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:609:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kx_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.713467] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'         double x_tmp = (\x1b[01;31m\x1b[Kx_\x1b[m\x1b[K - 1000) / 10.;\n'}
[0.713511] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[0.713902] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:610:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ky_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.714061] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'         double y_tmp = (\x1b[01;31m\x1b[Ky_\x1b[m\x1b[K - 1000) / 10.;\n'}
[0.714115] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[0.714646] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:610:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternative: \xe2\x80\x98\x1b[01m\x1b[Kyn\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.714749] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'         double y_tmp = (\x1b[01;36m\x1b[Ky_\x1b[m\x1b[K - 1000) / 10.;\n'}
[0.714802] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                         \x1b[01;36m\x1b[K^~\x1b[m\x1b[K\n'}
[0.714858] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                         \x1b[32m\x1b[Kyn\x1b[m\x1b[K\n'}
[0.714974] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:615:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcoeffs_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.715021] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'         double Poly_Y_Eval = PolyEval(\x1b[01;31m\x1b[Kcoeffs_\x1b[m\x1b[K, x_);\n'}
[0.715064] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                       \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[0.716607] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:607:36:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[KVectorXd\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[0.716726] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     double GetPotentialCost(Eigen::\x1b[01;35m\x1b[KVectorXd\x1b[m\x1b[K coeffs_, double x_, double y_)\n'}
[0.716771] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                    \x1b[01;35m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[0.716820] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kdouble HybridAstar::PolyEval(int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.716870] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:711:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcoeffs\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.716920] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'         for (int i = 0; i < \x1b[01;31m\x1b[Kcoeffs\x1b[m\x1b[K.size(); i++)\n'}
[0.716978] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                             \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[0.718058] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:711:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternative: \xe2\x80\x98\x1b[01m\x1b[Kcosf64\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.718188] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'         for (int i = 0; i < \x1b[01;36m\x1b[Kcoeffs\x1b[m\x1b[K.size(); i++)\n'}
[0.718230] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                             \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[0.718271] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                             \x1b[32m\x1b[Kcosf64\x1b[m\x1b[K\n'}
[0.718311] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:712:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kx\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.718352] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'             result += coeffs[i] * pow(\x1b[01;31m\x1b[Kx\x1b[m\x1b[K, i);\n'}
[0.718396] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[0.718882] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/include/hybrid_astar.hpp:708:28:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[KVectorXd\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[0.719109] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     double PolyEval(Eigen::\x1b[01;35m\x1b[KVectorXd\x1b[m\x1b[K coeffs, double x)\n'}
[0.719179] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                            \x1b[01;35m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[0.719221] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:\x1b[m\x1b[K At global scope:\n'}
[0.719263] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:26:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[0.719304] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b' double PolyEval(\x1b[01;31m\x1b[KEigen\x1b[m\x1b[K::VectorXd coeffs, double x)\n'}
[0.719343] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                 \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.719381] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:26:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.719423] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b' double PolyEval(Eigen::VectorXd coeffs, \x1b[01;31m\x1b[Kdouble\x1b[m\x1b[K x)\n'}
[0.719464] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                         \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[0.719504] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:26:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpression list treated as compound expression in initializer [\x1b[01;31m\x1b[K-fpermissive\x1b[m\x1b[K]\n'}
[0.719544] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b' double PolyEval(Eigen::VectorXd coeffs, double x\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[0.719583] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[0.719929] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:34:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[0.720038] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b' \x1b[01;31m\x1b[KEigen\x1b[m\x1b[K::VectorXd PolyFit(Eigen::VectorXd xvals, Eigen::VectorXd yvals, int order);\n'}
[0.720088] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b' \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.725671] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.725802] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:104:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ksuggest parentheses around comparison in operand of \xe2\x80\x98\x1b[01m\x1b[K&\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wparentheses\x1b[m\x1b[K]\n'}
[0.725932] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                 if( \x1b[01;35m\x1b[Kb_tmp > 215\x1b[m\x1b[K & (r_tmp + g_tmp + b_tmp < 590))\n'}
[0.726174] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                     \x1b[01;35m\x1b[K~~~~~~^~~~~\x1b[m\x1b[K\n'}
[0.726251] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:117:23:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison between signed and unsigned integer expressions [\x1b[01;35m\x1b[K-Wsign-compare\x1b[m\x1b[K]\n'}
[0.726309] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     for (int i = 0; \x1b[01;35m\x1b[Ki < waypoints.size()\x1b[m\x1b[K; i++)\n'}
[0.726358] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                     \x1b[01;35m\x1b[K~~^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.726406] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:122:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[0.726455] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;31m\x1b[KEigen\x1b[m\x1b[K::Map<Eigen::VectorXd> x_tmp(&WPs_x_tmp2[0], WPs_x_tmp2.size());\n'}
[0.726504] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.726551] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:122:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[0.726603] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     Eigen::Map<\x1b[01;31m\x1b[KEigen\x1b[m\x1b[K::VectorXd> x_tmp(&WPs_x_tmp2[0], WPs_x_tmp2.size());\n'}
[0.726654] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.726704] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:122:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kx_tmp\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.726765] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     Eigen::Map<Eigen::VectorXd> \x1b[01;31m\x1b[Kx_tmp\x1b[m\x1b[K(&WPs_x_tmp2[0], WPs_x_tmp2.size());\n'}
[0.726814] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                 \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.727002] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:123:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[0.727139] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;31m\x1b[KEigen\x1b[m\x1b[K::Map<Eigen::VectorXd> y_tmp(&WPs_y_tmp2[0], WPs_y_tmp2.size());\n'}
[0.727199] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.727249] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:123:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[0.727298] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     Eigen::Map<\x1b[01;31m\x1b[KEigen\x1b[m\x1b[K::VectorXd> y_tmp(&WPs_y_tmp2[0], WPs_y_tmp2.size());\n'}
[0.727346] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.727394] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:123:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ky_tmp\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.727451] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     Eigen::Map<Eigen::VectorXd> \x1b[01;31m\x1b[Ky_tmp\x1b[m\x1b[K(&WPs_y_tmp2[0], WPs_y_tmp2.size());\n'}
[0.727500] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                 \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.727979] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:124:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[0.728070] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;31m\x1b[KEigen\x1b[m\x1b[K::VectorXd coeffs_tmp2 = PolyFit(x_tmp, y_tmp, 3);\n'}
[0.728118] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.728490] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:143:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcoeffs_tmp2\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.728583] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     while (!h_astar2.Run(\x1b[01;31m\x1b[Kcoeffs_tmp2\x1b[m\x1b[K, obstacles_tmp))\n'}
[0.728633] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                          \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.731651] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:158:23:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison between signed and unsigned integer expressions [\x1b[01;35m\x1b[K-Wsign-compare\x1b[m\x1b[K]\n'}
[0.731916] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     for (int i = 0; \x1b[01;35m\x1b[Ki < h_astar2.local_x.size()\x1b[m\x1b[K; i++)\n'}
[0.731985] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                     \x1b[01;35m\x1b[K~~^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.732036] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:163:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcoeffs_tmp2\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.732086] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'             double error        = std::fabs((PolyEval(\x1b[01;31m\x1b[Kcoeffs_tmp2\x1b[m\x1b[K, h_astar2.local_x[i])-1000)/10 - (h_astar2.local_y[i]-1000)/10);\n'}
[0.732169] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                                       \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.733696] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:163:87:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KPolyEval\x1b[m\x1b[K\xe2\x80\x99 cannot be used as a function\n'}
[0.733804] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'  error        = std::fabs((PolyEval(coeffs_tmp2, h_astar2.local_x[i]\x1b[01;31m\x1b[K)\x1b[m\x1b[K-1000)/10 - (h_astar2.local_y[i]-1000)/10);\n'}
[0.733855] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[0.733904] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:164:86:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KPolyEval\x1b[m\x1b[K\xe2\x80\x99 cannot be used as a function\n'}
[0.733953] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b' e rms_square   = std::pow((PolyEval(coeffs_tmp2, h_astar2.local_x[i]\x1b[01;31m\x1b[K)\x1b[m\x1b[K-1000)/10 - (h_astar2.local_y[i]-1000)/10,2);\n'}
[0.734010] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                                                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[0.735594] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:186:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcoeffs_tmp2\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[0.735723] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     for(int i = 0; i < \x1b[01;31m\x1b[Kcoeffs_tmp2\x1b[m\x1b[K.size(); i++)\n'}
[0.735773] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                        \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.738077] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:189:22:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison between signed and unsigned integer expressions [\x1b[01;35m\x1b[K-Wsign-compare\x1b[m\x1b[K]\n'}
[0.738213] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     for(int i = 0; \x1b[01;35m\x1b[Ki < local_xy_tmp.size()-1\x1b[m\x1b[K; i++)\n'}
[0.738265] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'                    \x1b[01;35m\x1b[K~~^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.738438] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:139:9:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused variable \xe2\x80\x98\x1b[01m\x1b[KnCount_tmp\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-variable\x1b[m\x1b[K]\n'}
[0.738496] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'     int \x1b[01;35m\x1b[KnCount_tmp\x1b[m\x1b[K = 0;\n'}
[0.738545] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'         \x1b[01;35m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[0.739941] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:\x1b[m\x1b[K At global scope:\n'}
[0.740069] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/neubility/path_planning_ws/path_planning/src/hybrid_a_star_algorithm_pkg/src/main.cpp:222:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KEigen\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[0.740120] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b' \x1b[01;31m\x1b[KEigen\x1b[m\x1b[K::VectorXd PolyFit(Eigen::VectorXd xvals, Eigen::VectorXd yvals, int order)\n'}
[0.740169] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b' \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[0.800122] (-) TimerEvent: {}
[0.900672] (-) TimerEvent: {}
[0.986067] (hybrid_a_star_algorithm_pkg) StdoutLine: {'line': b"CMakeFiles/hybrid_a_star_algorithm_pkg.dir/build.make:62: recipe for target 'CMakeFiles/hybrid_a_star_algorithm_pkg.dir/src/main.cpp.o' failed\n"}
[0.986459] (hybrid_a_star_algorithm_pkg) StdoutLine: {'line': b"CMakeFiles/Makefile2:131: recipe for target 'CMakeFiles/hybrid_a_star_algorithm_pkg.dir/all' failed\n"}
[0.986923] (hybrid_a_star_algorithm_pkg) StdoutLine: {'line': b"Makefile:140: recipe for target 'all' failed\n"}
[0.987108] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'make[2]: *** [CMakeFiles/hybrid_a_star_algorithm_pkg.dir/src/main.cpp.o] Error 1\n'}
[0.987178] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'make[1]: *** [CMakeFiles/hybrid_a_star_algorithm_pkg.dir/all] Error 2\n'}
[0.987234] (hybrid_a_star_algorithm_pkg) StderrLine: {'line': b'make: *** [all] Error 2\n'}
[0.988298] (hybrid_a_star_algorithm_pkg) CommandEnded: {'returncode': 2}
[1.001259] (-) TimerEvent: {}
[1.038074] (hybrid_a_star_algorithm_pkg) JobEnded: {'identifier': 'hybrid_a_star_algorithm_pkg', 'rc': 2}
[1.049448] (-) EventReactorShutdown: {}
